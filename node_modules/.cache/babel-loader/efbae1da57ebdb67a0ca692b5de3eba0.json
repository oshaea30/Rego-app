{"ast":null,"code":"import _toConsumableArray from\"C:/Users/teron/my-first-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"C:/Users/teron/my-first-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import TodoForm from'./TodoForm';import Todo from'./Todo';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function TodoList(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),todos=_useState2[0],setTodos=_useState2[1];var addTodo=function addTodo(todo){var _console;if(!todo.text||/^\\s*$/.test(todo.text)){return;}var newTodos=[todo].concat(_toConsumableArray(todos));setTodos(newTodos);(_console=console).log.apply(_console,_toConsumableArray(todos));};var updateTodo=function updateTodo(todoId,newValue){if(!newValue.text||/^\\s*$/.test(newValue.text)){return;}setTodos(function(prev){return prev.map(function(item){return item.id===todoId?newValue:item;});});};var removeTodo=function removeTodo(id){var removedArr=_toConsumableArray(todos).filter(function(todo){return todo.id!==id;});setTodos(removedArr);};var completeTodo=function completeTodo(id){var updatedTodos=todos.map(function(todo){if(todo.id===id){todo.isComplete=!todo.isComplete;}return todo;});setTodos(updatedTodos);};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"What's the Plan for Today?\"}),/*#__PURE__*/_jsx(TodoForm,{onSubmit:addTodo}),/*#__PURE__*/_jsx(Todo,{todos:todos,completeTodo:completeTodo,removeTodo:removeTodo,updateTodo:updateTodo})]});}export default TodoList;","map":{"version":3,"sources":["C:/Users/teron/my-first-app/src/components/TodoList.js"],"names":["React","useState","TodoForm","Todo","TodoList","todos","setTodos","addTodo","todo","text","test","newTodos","console","log","updateTodo","todoId","newValue","prev","map","item","id","removeTodo","removedArr","filter","completeTodo","updatedTodos","isComplete"],"mappings":"4SAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,MAAOC,CAAAA,QAAP,KAAqB,YAArB,CACA,MAAOC,CAAAA,IAAP,KAAiB,QAAjB,C,6IAEA,QAASC,CAAAA,QAAT,EAAoB,CAClB,cAA0BH,QAAQ,CAAC,EAAD,CAAlC,wCAAOI,KAAP,eAAcC,QAAd,eAEA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAAAC,IAAI,CAAI,cACtB,GAAI,CAACA,IAAI,CAACC,IAAN,EAAc,QAAQC,IAAR,CAAaF,IAAI,CAACC,IAAlB,CAAlB,CAA2C,CACzC,OACD,CAED,GAAME,CAAAA,QAAQ,EAAIH,IAAJ,4BAAaH,KAAb,EAAd,CAEAC,QAAQ,CAACK,QAAD,CAAR,CACA,UAAAC,OAAO,EAACC,GAAR,mCAAeR,KAAf,GACD,CATD,CAWA,GAAMS,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,MAAD,CAASC,QAAT,CAAsB,CACvC,GAAI,CAACA,QAAQ,CAACP,IAAV,EAAkB,QAAQC,IAAR,CAAaM,QAAQ,CAACP,IAAtB,CAAtB,CAAmD,CACjD,OACD,CAEDH,QAAQ,CAAC,SAAAW,IAAI,QAAIA,CAAAA,IAAI,CAACC,GAAL,CAAS,SAAAC,IAAI,QAAKA,CAAAA,IAAI,CAACC,EAAL,GAAYL,MAAZ,CAAqBC,QAArB,CAAgCG,IAArC,EAAb,CAAJ,EAAL,CAAR,CACD,CAND,CAQA,GAAME,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAAAD,EAAE,CAAI,CACvB,GAAME,CAAAA,UAAU,CAAG,mBAAIjB,KAAJ,EAAWkB,MAAX,CAAkB,SAAAf,IAAI,QAAIA,CAAAA,IAAI,CAACY,EAAL,GAAYA,EAAhB,EAAtB,CAAnB,CAEAd,QAAQ,CAACgB,UAAD,CAAR,CACD,CAJD,CAMA,GAAME,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAAAJ,EAAE,CAAI,CACzB,GAAIK,CAAAA,YAAY,CAAGpB,KAAK,CAACa,GAAN,CAAU,SAAAV,IAAI,CAAI,CACnC,GAAIA,IAAI,CAACY,EAAL,GAAYA,EAAhB,CAAoB,CAClBZ,IAAI,CAACkB,UAAL,CAAkB,CAAClB,IAAI,CAACkB,UAAxB,CACD,CACD,MAAOlB,CAAAA,IAAP,CACD,CALkB,CAAnB,CAMAF,QAAQ,CAACmB,YAAD,CAAR,CACD,CARD,CAUA,mBACE,wCACE,kDADF,cAEE,KAAC,QAAD,EAAU,QAAQ,CAAElB,OAApB,EAFF,cAGE,KAAC,IAAD,EACE,KAAK,CAAEF,KADT,CAEE,YAAY,CAAEmB,YAFhB,CAGE,UAAU,CAAEH,UAHd,CAIE,UAAU,CAAEP,UAJd,EAHF,GADF,CAYD,CAED,cAAeV,CAAAA,QAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport TodoForm from './TodoForm';\r\nimport Todo from './Todo';\r\n\r\nfunction TodoList() {\r\n  const [todos, setTodos] = useState([]);\r\n\r\n  const addTodo = todo => {\r\n    if (!todo.text || /^\\s*$/.test(todo.text)) {\r\n      return;\r\n    }\r\n\r\n    const newTodos = [todo, ...todos];\r\n\r\n    setTodos(newTodos);\r\n    console.log(...todos);\r\n  };\r\n\r\n  const updateTodo = (todoId, newValue) => {\r\n    if (!newValue.text || /^\\s*$/.test(newValue.text)) {\r\n      return;\r\n    }\r\n\r\n    setTodos(prev => prev.map(item => (item.id === todoId ? newValue : item)));\r\n  };\r\n\r\n  const removeTodo = id => {\r\n    const removedArr = [...todos].filter(todo => todo.id !== id);\r\n\r\n    setTodos(removedArr);\r\n  };\r\n\r\n  const completeTodo = id => {\r\n    let updatedTodos = todos.map(todo => {\r\n      if (todo.id === id) {\r\n        todo.isComplete = !todo.isComplete;\r\n      }\r\n      return todo;\r\n    });\r\n    setTodos(updatedTodos);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h1>What's the Plan for Today?</h1>\r\n      <TodoForm onSubmit={addTodo} />\r\n      <Todo\r\n        todos={todos}\r\n        completeTodo={completeTodo}\r\n        removeTodo={removeTodo}\r\n        updateTodo={updateTodo}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default TodoList;\r\n"]},"metadata":{},"sourceType":"module"}