{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\teron\\\\my-first-app\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from 'react';\nimport TodoList from './TodoList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [todos, setTodos] = useState([]);\n  const todoNameRef = useRef();\n\n  function handleAddTodo(e) {\n    const name = todoNameRef.current.value;\n    if (name === '') return;\n    setTodos(prevTodos => {\n      return [...prevTodos, {\n        id: 1,\n        name: name,\n        complete: false\n      }];\n    });\n    todoNameRef.current.value = null;\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(TodoList, {\n      todos: todos\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      ref: todoNameRef,\n      type: \"text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddTodo,\n      children: \"Add Todo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Clear Completed\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"0 left to do\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"Co+oX9O3pMnlY40DokhjoAfbhpA=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/teron/my-first-app/src/App.js"],"names":["React","useState","useRef","TodoList","App","todos","setTodos","todoNameRef","handleAddTodo","e","name","current","value","prevTodos","id","complete"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,MAAzB,QAAsC,OAAtC;AACA,OAAOC,QAAP,MAAqB,YAArB;;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAMM,WAAW,GAAGL,MAAM,EAA1B;;AACA,WAASM,aAAT,CAAuBC,CAAvB,EAA0B;AACzB,UAAMC,IAAI,GAAGH,WAAW,CAACI,OAAZ,CAAoBC,KAAjC;AACA,QAAIF,IAAI,KAAK,EAAb,EAAiB;AAClBJ,IAAAA,QAAQ,CAACO,SAAS,IAAG;AACnB,aAAO,CAAC,GAAGA,SAAJ,EAAe;AAAEC,QAAAA,EAAE,EAAE,CAAN;AAASJ,QAAAA,IAAI,EAAEA,IAAf;AAAqBK,QAAAA,QAAQ,EAAE;AAA/B,OAAf,CAAP;AACD,KAFO,CAAR;AAGCR,IAAAA,WAAW,CAACI,OAAZ,CAAoBC,KAApB,GAA4B,IAA5B;AACF;;AACC,sBACE;AAAA,4BACF,QAAC,QAAD;AAAU,MAAA,KAAK,EAAIP;AAAnB;AAAA;AAAA;AAAA;AAAA,YADE,eAEF;AAAO,MAAA,GAAG,EAAEE,WAAZ;AAAyB,MAAA,IAAI,EAAG;AAAhC;AAAA;AAAA;AAAA;AAAA,YAFE,eAGF;AAAQ,MAAA,OAAO,EAAEC,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHE,eAIF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJE,eAKF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALE;AAAA,kBADF;AASD;;GApBQJ,G;;KAAAA,G;AAuBT,eAAeA,GAAf","sourcesContent":["import React, {useState, useRef} from 'react';\nimport TodoList from './TodoList'\n\nfunction App() {\n  const [todos, setTodos] = useState([])\n  const todoNameRef = useRef()\n  function handleAddTodo(e) {\n   const name = todoNameRef.current.value\n   if (name === '') return \n  setTodos(prevTodos =>{\n    return [...prevTodos, { id: 1, name: name, complete: false}]\n  })\n   todoNameRef.current.value = null \n}\n  return (\n    <>\n  <TodoList todos = {todos} />\n  <input ref={todoNameRef} type = 'text'/>\n  <button onClick={handleAddTodo}>Add Todo</button>\n  <button>Clear Completed</button>\n  <div>0 left to do</div>\n  </>\n  ) \n}\n    \n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}